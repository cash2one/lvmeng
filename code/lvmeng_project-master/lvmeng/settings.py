#coding:utf-8
"""
Django settings for lvmeng project.

Generated by 'django-admin startproject' using Django 1.8.2.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

VAR_ROOT = os.path.abspath(os.path.join(BASE_DIR, 'log_info'))
LOG_DIR = os.path.join(VAR_ROOT, 'data_log')

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'p^zm_ayrn3h3ya)o4q4+_f@n-lif%07200*!$&^e6wda3ft1ev'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']

MAIL_HOST = '127.0.0.1'
EMAIL_HOST = '127.0.0.1'
EMAIL_PORT = 25
EMAIL_USE_SSL = False
DEFAULT_FROM_EMAIL = "niujidui@niujidui.com"

PRODUCT_LINK = "http://niujidui.com/mobi/product_detail/?product_id="
NEWS_LINK = "http://niujidui.com/mobi/news_detail/?news_id="


# Application definition

INSTALLED_APPS = (
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'rest_framework.authtoken',
    'registration',
    'crispy_forms',
    'simple_history',
    'corsheaders',#TODO:csrf exempt, need to remove later
    'rest_auth',
    'captcha',
    'oa',
    'erp',
    'api',
    'agent_api',
    'datetimewidget',
    'postman',
    'web_customer',
    'tinymce',
    'form_utils',
    'easy_thumbnails',
    'mobi',
    # 'message_api',
    'push',
    'investment',
)

#captcha图形验证码格式
CAPTCHA_IMAGE_TEMPLATE = 'api/captcha/image.html'
CAPTCHA_TEXT_FIELD_TEMPLATE = 'api/captcha/text_field.html'
CAPTCHA_FIELD_TEMPLATE = 'api/captcha/field.html'
CAPTCHA_LENGTH = 3
CAPTCHA_CHALLENGE_FUNCT = 'api.views.random_digit_challenge'

MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    # 'django.middleware.locale.LocaleMiddleware',
    'simple_history.middleware.HistoryRequestMiddleware',
    'corsheaders.middleware.CorsMiddleware',#TODO:csrf exempt, need to remove later
    'erp.permission_middleware.QtsPermissionMiddleware',
)

ROOT_URLCONF = 'lvmeng.urls'
# ROOT_URLCONF = ('lvmeng.urls','postman.urls')

SESSION_COOKIE_AGE=120*60
SESSION_EXPIRE_AT_BROWSER_CLOSE = False

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

#django_messages
# TEMPLATE_CONTEXT_PROCESSORS = (
#     'django_messages.context_processors.inbox',
# )

#this makes crispy form div class tobe 'form-control'
CRISPY_TEMPLATE_PACK = 'bootstrap3'

WSGI_APPLICATION = 'lvmeng.wsgi.application'

REST_FRAMEWORK = {
    # 'DEFAULT_PERMISSION_CLASSES': ('rest_framework.permissions.IsAdminUser',),
    # 'PAGE_SIZE': 10,
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.BasicAuthentication',
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.TokenAuthentication',
    ),
    'DEFAULT_RENDERER_CLASSES': (
        'rest_framework.renderers.JSONRenderer',
        'rest_framework.renderers.BrowsableAPIRenderer',
    ),
    'DEFAULT_FILTER_BACKENDS': ('rest_framework.filters.DjangoFilterBackend',),
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.LimitOffsetPagination',
    'TEST_REQUEST_DEFAULT_FORMAT': 'json',
    'TEST_REQUEST_RENDERER_CLASSES': (
        'rest_framework.renderers.MultiPartRenderer',
        'rest_framework.renderers.JSONRenderer',
        'rest_framework.renderers.TemplateHTMLRenderer'
    ),
}

# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql', # Add 'postgresql_psycopg2', 'mysql', 'sqlite3' or 'oracle'.
#         'NAME': 'EZ_Green_China',                      # Or path to database file if using sqlite3.
        'NAME': 'lvmeng',                      # Or path to database file if using sqlite3.
        'USER': 'root',                      # Not used with sqlite3.
        'PASSWORD': 'ljcmysql.server',                  # Not used with sqlite3.
        'HOST': '',                      # Set to empty string for localhost. Not used with sqlite3.
        'PORT': '3306',                      # Set to empty string for default. Not used with sqlite3.
        'ENCODING': 'utf-8',
         'OPTIONS': {
         "init_command": "SET foreign_key_checks = 0;",#'Cannot add or update a child row: a foreign key constraint fails
      },
    },


}

PUSH_NOTIFICATIONS_SETTINGS = {
        "GCM_API_KEY": "[your api key]",
        "JPUSH_APP_KEY": "8ec4361d7eb40b608fb2a08b",
        "JPUSH_MASTER_SECRET": "07cbf992c6e4caedd55e6925",
        "APNS_CERTIFICATE": os.path.dirname(os.path.dirname(os.path.abspath(__file__)))+"/final_agent_development.pem",
}

# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'zh_CN'
# LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = False #如果置为True,datetimefield存进数据库的时候时区会变为UTC
# USE_TZ = True

#this is used to make random path for all files uploaded, so it won't get hacked
DEFAULT_FILE_STORAGE="randomfilestorage.storage.RandomFileSystemStorage"

#email
# EMAIL_PORT = 587

LOGIN_URL = 'login/'#默认的URL

# URL prefix for static files.
# Example: "http://media.lawrence.com/static/"
STATIC_URL = '/static/'

# STATIC_DIR = os.path.join(BASE_DIR, "static")
STATICFILES_DIRS = (
    os.path.join(BASE_DIR, "static"),
)
STATIC_ROOT = os.path.join(BASE_DIR, "static/")
MEDIA_ROOT = os.path.join(BASE_DIR, "media/")
MEDIA_URL = '/media/'
MEDIA_DIR = os.path.join(BASE_DIR, "media")

CORS_ORIGIN_ALLOW_ALL = True

CORS_ALLOW_HEADERS = (
        'x-requested-with',
        'content-type',
        'accept',
        'origin',
        'authorization',
        'x-csrftoken',
        'X-Auth-Token',#add this to allow headers so that it will be accepted by django
    )


TINYMCE_DEFAULT_CONFIG = {
                            'theme': 'advanced',
                            'language' : "zh-cn",
                            'plugins' : "pagebreak,style,layer,table,save,advhr,advimage,advlink,emotions,iespell,inlinepopups,insertdatetime,preview,media,searchreplace,print,contextmenu,paste,directionality,fullscreen,noneditable,visualchars,nonbreaking,xhtmlxtras,template,wordcount,advlist,autosave",
                            'theme_advanced_buttons1' : "save,newdocument,|,bold,italic,underline,strikethrough,|,justifyleft,justifycenter,justifyright,justifyfull,styleselect,formatselect,fontselect,fontsizeselect,fullscreen,code",
                            'theme_advanced_buttons2' : "cut,copy,paste,pastetext,|,search,replace,|,bullist,numlist,|,outdent,indent,blockquote,|,undo,redo,|,link,unlink,anchor,image,cleanup,|,insertdate,inserttime,preview,|,forecolor,backcolor",
                            'theme_advanced_buttons3' : "tablecontrols,|,hr,removeformat,visualaid,|,sub,sup,|,charmap,emotions,iespell,media,advhr,|,print,|,ltr,rtl",

                            'template_external_list_url' : "lists/template_list.js",
                            'external_link_list_url' : "lists/link_list.js",
                            'external_image_list_url' : "lists/image_list.js",
                            'media_external_list_url' : "lists/media_list.js",

                            'theme_advanced_toolbar_location' : "top",
                            'theme_advanced_toolbar_align' : "left",
                            'theme_advanced_statusbar_location' : "bottom",
                            'theme_advanced_resizing' : 'true',
                            'style_formats' : [
                                                {'title' : 'Bold text', 'inline' : 'strong'},
                                                {'title' : 'Red text', 'inline' : 'span', 'styles' : {'color' : '#ff0000'}},
                                                {'title' : 'Help', 'inline' : 'strong', 'classes' : 'help'},
                                                {'title' : 'Table styles'},
                                                {'title' : 'Table row 1', 'selector' : 'tr', 'classes' : 'tablerow'}
                                            ],
                            'width': 800,
                            'height': 400,
                        }


# LOGGING={
#     'version':1,
#     'disable_existing_loggers': True,
#     'formatters':{
#         'fmt':{
#             # 'format':'[%(asctime)s] %(message)s'
#             'format':'[%(levelname)s %(asctime)s] %(message)s'
#         }
#     },
#     'handlers':{
#         'console_handler':{
#             'class':'logging.StreamHandler',
#             'level':'DEBUG',
#             'formatter':'fmt',
#         },
#
#         'errors_handler':{
#             'class':'logging.handlers.RotatingFileHandler',
#             'filename': os.path.join(LOG_DIR, 'errors.log'),
#             'level':'ERROR',
#             'maxBytes':1024*1024*5,
#             'backupCount':10,
#             'formatter':'fmt',
#         },
#         'data_change_handler':{
#             'class':'logging.handlers.RotatingFileHandler',
#             'filename': os.path.join(LOG_DIR, 'data_change.log'),
#             'level':'INFO',
#             'maxBytes':1024*1024*5,
#             'backupCount':0,
#             'formatter':'fmt',
#         },
#     },
#     'loggers':{
#         'default':{
#             'handlers':['console_handler'],
#             'level':'DEBUG',
#             'propagate':False
#         },
#         'errors':{
#             'handlers':['errors_handler'],
#             'level':'ERROR',
#             'propagate':False
#         },
#         'data_change':{
#             'handlers':['data_change_handler'],
#             'level':'INFO',
#             'propagate':False
#         },
#     }
# }

try:
   from local_settings import *
except ImportError, e:
   pass

